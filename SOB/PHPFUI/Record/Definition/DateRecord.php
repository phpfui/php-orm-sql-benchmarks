<?php

namespace SOB\PHPFUI\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property string $dateDefaultNotNull MySQL type date
 * @property ?string $dateDefaultNull MySQL type date
 * @property ?string $dateDefaultNullable MySQL type date
 * @property int $dateRecordId MySQL type integer
 * @property string $dateRequired MySQL type date
 * @property string $timestampDefaultCurrentNotNull MySQL type timestamp
 * @property ?string $timestampDefaultCurrentNullable MySQL type timestamp
 */
abstract class DateRecord extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['dateRecordId', ];

	protected static string $table = 'dateRecord';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'dateDefaultNotNull' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, '2000-01-02', ),
				'dateDefaultNull' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, null, ),
				'dateDefaultNullable' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, true, '2000-01-02', ),
				'dateRecordId' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, false, ),
				'dateRequired' => new \PHPFUI\ORM\FieldDefinition('date', 'string', 10, false, ),
				'timestampDefaultCurrentNotNull' => new \PHPFUI\ORM\FieldDefinition('timestamp', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'timestampDefaultCurrentNullable' => new \PHPFUI\ORM\FieldDefinition('timestamp', 'string', 20, true, 'CURRENT_TIMESTAMP', ),
			];
			}

		return $this;
		}
	}
