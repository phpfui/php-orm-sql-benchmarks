<?php

namespace SOB\PHPFUI\Record\Definition;

/**
 * Autogenerated. Do not modify. Modify SQL table, then generate with \PHPFUI\ORM\Tool\Generate\CRUD class.
 *
 * @property ?int $approved_by MySQL type integer
 * @property ?string $approved_date MySQL type datetime
 * @property ?int $created_by MySQL type integer
 * @property string $creation_date MySQL type datetime
 * @property ?string $expected_date MySQL type datetime
 * @property ?string $notes MySQL type longtext
 * @property ?float $payment_amount MySQL type decimal(19,4)
 * @property ?string $payment_date MySQL type datetime
 * @property ?string $payment_method MySQL type varchar(50)
 * @property int $purchase_order_id MySQL type integer
 * @property \SOB\PHPFUI\Record\PurchaseOrder $purchase_order related record
 * @property ?int $purchase_order_status_id MySQL type integer
 * @property \SOB\PHPFUI\Record\PurchaseOrderStatus $purchase_order_status related record
 * @property float $shipping_fee MySQL type decimal(19,4)
 * @property ?int $submitted_by MySQL type integer
 * @property ?string $submitted_date MySQL type datetime
 * @property ?int $supplier_id MySQL type integer
 * @property \SOB\PHPFUI\Record\Supplier $supplier related record
 * @property float $taxes MySQL type decimal(19,4)
 */
abstract class PurchaseOrder extends \PHPFUI\ORM\Record
	{
	protected static bool $autoIncrement = true;

	/** @var array<string, \PHPFUI\ORM\FieldDefinition> */
	protected static array $fields = [];

	/** @var array<string> */
	protected static array $primaryKeys = ['purchase_order_id', ];

	protected static string $table = 'purchase_order';

	public function initFieldDefinitions() : static
		{
		if (! \count(static::$fields))
			{
			static::$fields = [
				'approved_by' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'approved_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, null, ),
				'created_by' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'creation_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, false, 'CURRENT_TIMESTAMP', ),
				'expected_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, null, ),
				'notes' => new \PHPFUI\ORM\FieldDefinition('longtext', 'string', 4294967295, true, null, ),
				'payment_amount' => new \PHPFUI\ORM\FieldDefinition('decimal(19,4)', 'float', 19, true, 0.0000, ),
				'payment_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, null, ),
				'payment_method' => new \PHPFUI\ORM\FieldDefinition('varchar(50)', 'string', 50, true, null, ),
				'purchase_order_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, false, ),
				'purchase_order_status_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, 0, ),
				'shipping_fee' => new \PHPFUI\ORM\FieldDefinition('decimal(19,4)', 'float', 19, false, 0.0000, ),
				'submitted_by' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'submitted_date' => new \PHPFUI\ORM\FieldDefinition('datetime', 'string', 20, true, null, ),
				'supplier_id' => new \PHPFUI\ORM\FieldDefinition('integer', 'int', 0, true, null, ),
				'taxes' => new \PHPFUI\ORM\FieldDefinition('decimal(19,4)', 'float', 19, false, 0.0000, ),
			];
			}

		return $this;
		}
	}
